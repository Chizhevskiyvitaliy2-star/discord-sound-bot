import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
ADMIN_ID = int(os.environ.get("ADMIN_ID", "0"))

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! –Ø –±–æ—Ç @VimatSoundBot. –ù–∞—Ç–∏—Å–Ω–∏ /menu.")

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ü—ñ–Ω–≥", callback_data="ping")],
        [InlineKeyboardButton("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data="info")]
    ]
    await update.message.reply_text("–ú–µ–Ω—é:", reply_markup=InlineKeyboardMarkup(keyboard))

async def admin_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–¢—ñ–ª—å–∫–∏ –¥–ª—è –≤–ª–∞—Å–Ω–∏–∫–∞ :)")
        return
    await update.message.reply_text("–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –ø–æ–∫–∏ –ø—É—Å—Ç–∞, –∞–ª–µ –±—É–¥–µ üî•")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "ping":
        await query.edit_message_text("Pong ‚úÖ")
    elif query.data == "info":
        await query.edit_message_text("–Ø –ø—Ä–∞—Ü—é—é 24/7 –Ω–∞ Railway üöö‚ö°")

def main():
    if not TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        return

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", menu))
    app.add_handler(CommandHandler("admin", admin_cmd))
    app.add_handler(CallbackQueryHandler(button_handler))

    app.run_polling()

if __name__ == "__main__":
    main()
